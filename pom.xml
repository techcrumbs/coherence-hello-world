<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.techcrunch.example</groupId>
  <artifactId>coherence-hello-world</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>${packaging}</packaging>

  <parent>
    <groupId>io.micronaut.platform</groupId>
    <artifactId>micronaut-parent</artifactId>
    <version>4.7.6</version>
  </parent>

  <properties>
    <packaging>jar</packaging>
    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>
    <coherence.version>24.03</coherence.version>
    <micronaut.version>4.7.6</micronaut.version>
    <micronaut.runtime>netty</micronaut.runtime>
    <exec.mainClass>com.techcrunch.example.Application</exec.mainClass>
  </properties>

  <dependencies>
    <!-- Coherence CE dependency -->
    <dependency>
      <groupId>com.oracle.coherence.ce</groupId>
      <artifactId>coherence</artifactId>
      <version>${coherence.version}</version>
    </dependency>

    <!-- Coherence console logging -->
    <dependency>
      <groupId>org.fusesource.jansi</groupId>
      <artifactId>jansi</artifactId>
      <version>2.4.0</version>
    </dependency>

    <dependency>
        <groupId>io.micronaut</groupId>
        <artifactId>micronaut-runtime</artifactId>
    </dependency>

    <!-- HTTP Server (Netty) -->
    <dependency>
        <groupId>io.micronaut</groupId>
        <artifactId>micronaut-http-server-netty</artifactId>
    </dependency>

    <dependency>
        <groupId>io.micronaut</groupId>
        <artifactId>micronaut-jackson-databind</artifactId>
    </dependency>

    <dependency>
        <groupId>io.micronaut.coherence</groupId>
        <artifactId>micronaut-coherence</artifactId>
      <version>5.0.0</version>
    </dependency>

    <dependency>
      <groupId>io.micronaut.data</groupId>
      <artifactId>micronaut-data-processor</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>io.micronaut.data</groupId>
      <artifactId>micronaut-data-hibernate-jpa</artifactId>
      <exclusions>
        <exclusion>
          <groupId>jakarta.activation</groupId>
          <artifactId>jakarta.activation-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>io.micronaut.sql</groupId>
      <artifactId>micronaut-jdbc-hikari</artifactId>
    </dependency>

    <dependency>
      <groupId>jakarta.persistence</groupId>
      <artifactId>jakarta.persistence-api</artifactId>
    </dependency>

    <!-- Required for DI at runtime -->

    <dependency>
      <groupId>io.micronaut</groupId>
      <artifactId>micronaut-inject</artifactId>
    </dependency>

    <dependency>
      <groupId>io.micronaut.reactor</groupId>
      <artifactId>micronaut-reactor</artifactId>
    </dependency>

    <!-- Required for annotation processing (compile-time DI) -->
    <dependency>
      <groupId>io.micronaut</groupId>
      <artifactId>micronaut-inject-java</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- JDBC Driver for H2 -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- Logging -->
    <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <scope>runtime</scope>
    </dependency>

    <!-- Read application.yaml -->
    <dependency>
      <groupId>org.yaml</groupId>
      <artifactId>snakeyaml</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- Annotations -->
    <dependency>
        <groupId>jakarta.annotation</groupId>
        <artifactId>jakarta.annotation-api</artifactId>
    </dependency>    

    <!-- Micronaut Test Client -->
    <dependency>
        <groupId>io.micronaut.test</groupId>
        <artifactId>micronaut-test-junit5</artifactId>
        <scope>test</scope>
    </dependency>

    <!-- HTTP Client for Testing -->
    <dependency>
        <groupId>io.micronaut</groupId>
        <artifactId>micronaut-http-client</artifactId>
        <scope>test</scope>
    </dependency>

    <!-- JUnit -->
    <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <scope>test</scope>
    </dependency>    

  </dependencies>

  <build>
    <plugins>

      <!-- Micronaut AOT & Annotation Processing -->
      <plugin>
          <groupId>io.micronaut.maven</groupId>
          <artifactId>micronaut-maven-plugin</artifactId>
          <configuration>
            <configFile>aot-${packaging}.properties</configFile>
          </configuration>
          <executions>
            <execution>
              <id>graalvm-resources</id>
              <goals>
                <goal>graalvm-resources</goal>
              </goals>
            </execution>
          </executions>
      </plugin>

      <!-- Compiler plugin to use the specified Java version -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.10.1</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <annotationProcessorPaths>
              <path>
                  <groupId>io.micronaut</groupId>
                  <artifactId>micronaut-inject-java</artifactId>
                  <version>${micronaut.version}</version>
              </path>
              <path>
                <groupId>io.micronaut.data</groupId>
                <artifactId>micronaut-data-processor</artifactId>
                <version>${micronaut.data.version}</version>
              </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.5.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <!-- Add your configurations here -->
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-rules</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <!-- Ensure the project runs with Java 21 -->
                <requireJavaVersion>
                  <version>21</version>
                </requireJavaVersion>

                <!-- Enforce minimum Maven version -->
                <requireMavenVersion>
                  <version>3.6.3</version>
                </requireMavenVersion>

                <!-- Prevent duplicate dependencies -->
                <requireUpperBoundDeps />

                <!-- Fail build if banned dependencies are found -->
                <bannedDependencies />

                <!-- Check dependency convergence to prevent conflicts -->
                <dependencyConvergence />

              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.oracle.coherence.ce</groupId>
        <artifactId>pof-maven-plugin</artifactId>
        <version>${coherence.version}</version>
        <executions>
          <execution>
            <id>instrument</id>
            <goals>
              <goal>instrument</goal>
            </goals>
          </execution>
          <execution>
            <id>instrument-tests</id>
            <goals>
              <goal>instrument-tests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>
</project>

